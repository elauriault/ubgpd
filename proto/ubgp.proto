syntax = "proto3";
package ubgp;

service Config {
  rpc GetNeighborConfig (NeighborRequest) returns (NeighborReply);
}

message NeighborReply {
  repeated NeighborEntry neighbors = 1;
}

message NeighborEntry {
  string ip = 1;
  uint32 port = 2;
  uint32 asn = 3;
  uint32 routerid = 4;
}

message NeighborRequest {
  optional string ip = 1;
}

service State {
  // rpc GetSession (NeighborRequest) returns (NeighborReply);
  rpc GetRib (RibRequest) returns (RibReply);
}

message RibRequest {
  uint32 afi = 1;
  uint32 safi = 2;
}

message RibReply {
  repeated RibEntry nlris = 1;
}

message RibEntry {
  string nlri = 1;
  // RouteAttributes attributes = 2;
}

message RouteAttributes {
    // as_path: bgp::ASPATH,
    // origin: bgp::OriginType,
    // pub next_hop: IpAddr,
    // local_pref: Option<u32>,
    // multi_exit_disc: Option<u32>,
    // path_type: PathType,
    // peer_type: PeeringType,
    // recv_time: Instant,
    // pub peer_rid: u32,
    // peer_ip: IpAddr,
}
